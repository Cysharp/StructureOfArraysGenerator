name: Build-Debug

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
        with:
          dotnet-version: |
            6.0.x
            7.0.x
      - run: dotnet build -c Debug
      - run: dotnet test -c Debug --no-build

  build-unity:
    if: "((github.event_name == 'push' && github.repository_owner == 'Cysharp') || startsWith(github.event.pull_request.head.label, 'Cysharp:'))"
    strategy:
      matrix:
        unity: ["2021.3.11f1"]
        include:
          - unity: 2021.3.11f1
            license: UNITY_LICENSE_2021
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Build Unity (.unitypacakge)
        uses: Cysharp/Actions/.github/actions/unity-builder@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: src/StructureOfArraysGenerator.Unity
          unityVersion: ${{ matrix.unity }}
          targetPlatform: StandaloneLinux64
          buildMethod: PackageExporter.Export

      - uses: Cysharp/Actions/.github/actions/check-metas@main # check meta files
        with:
          directory: src/StructureOfArraysGenerator.Unity

      # Store artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: StructureOfArraysGenerator.${{ matrix.unity }}.unitypackage
          path: ./src/StructureOfArraysGenerator.Unity/*.unitypackage
